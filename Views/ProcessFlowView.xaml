<Window x:Class="KdxDesigner.Views.ProcessFlowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:KdxDesigner.Views"
        mc:Ignorable="d"
        Title="工程フロー編集" Height="800" Width="1200">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="200"/>
        </Grid.RowDefinitions>
        
        <!-- ツールバー -->
        <ToolBar Grid.Row="0">
            <Button Command="{Binding SaveChangesCommand}" Padding="10,5">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="💾" Margin="0,0,5,0"/>
                    <TextBlock Text="保存"/>
                </StackPanel>
            </Button>
            <Separator/>
            <Button Command="{Binding FilterBySelectedNodeCommand}" 
                    IsEnabled="{Binding SelectedNode, Converter={StaticResource NullToBooleanConverter}}"
                    Padding="10,5">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="🔍" Margin="0,0,5,0"/>
                    <TextBlock Text="選択工程の関連のみ表示"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding ResetFilterCommand}" 
                    IsEnabled="{Binding IsFiltered}"
                    Padding="10,5">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="↻" Margin="0,0,5,0"/>
                    <TextBlock Text="すべて表示"/>
                </StackPanel>
            </Button>
            <Separator/>
            <TextBlock Text="Ctrlキーを押しながらノードをクリックして接続を作成" VerticalAlignment="Center" Margin="10,0"/>
            <TextBlock VerticalAlignment="Center" Margin="10,0">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFiltered}" Value="True">
                                <Setter Property="Text" Value="{Binding FilterNode.DisplayName, StringFormat='フィルター中: {0}'}"/>
                                <Setter Property="Foreground" Value="Orange"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </ToolBar>
        
        <!-- メインキャンバス -->
        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Canvas x:Name="MainCanvas" 
                        Width="{Binding CanvasWidth}" 
                        Height="{Binding CanvasHeight}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseMove">
                            <i:InvokeCommandAction Command="{Binding CanvasMouseMoveCommand}" 
                                                   PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding CanvasMouseUpCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    
                    <!-- グリッド線 -->
                    <Canvas.Background>
                        <DrawingBrush TileMode="Tile" Viewport="0,0,50,50" ViewportUnits="Absolute">
                            <DrawingBrush.Drawing>
                                <GeometryDrawing>
                                    <GeometryDrawing.Geometry>
                                        <RectangleGeometry Rect="0,0,50,50"/>
                                    </GeometryDrawing.Geometry>
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="#E0E0E0" Thickness="1"/>
                                    </GeometryDrawing.Pen>
                                </GeometryDrawing>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>
                    </Canvas.Background>
                    
                    <!-- コネクション -->
                    <ItemsControl ItemsSource="{Binding Connections}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Canvas>
                                    <!-- 接続線 -->
                                    <Path StrokeThickness="2" Fill="Transparent">
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Stroke" Value="DarkBlue"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsModified}" Value="True">
                                                        <Setter Property="Stroke" Value="Orange"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="{Binding StartPoint}">
                                                    <LineSegment Point="{Binding EndPoint}"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                        <Path.InputBindings>
                                            <MouseBinding MouseAction="RightClick" 
                                                          Command="{Binding DataContext.DeleteConnectionCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                          CommandParameter="{Binding}"/>
                                        </Path.InputBindings>
                                    </Path>
                                    
                                    <!-- 矢印の頭 -->
                                    <Polygon Points="0,0 10,5 0,10">
                                        <Polygon.Style>
                                            <Style TargetType="Polygon">
                                                <Setter Property="Fill" Value="DarkBlue"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsModified}" Value="True">
                                                        <Setter Property="Fill" Value="Orange"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Polygon.Style>
                                        <Polygon.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="{Binding ArrowAngle}" CenterX="5" CenterY="5"/>
                                                <TranslateTransform X="{Binding ArrowX}" Y="{Binding ArrowY}"/>
                                            </TransformGroup>
                                        </Polygon.RenderTransform>
                                    </Polygon>
                                </Canvas>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    
                    <!-- 接続中の線 -->
                    <Line x:Name="ConnectionLine" 
                          Stroke="Orange" 
                          StrokeThickness="2" 
                          StrokeDashArray="5,5"
                          Visibility="{Binding IsConnecting, Converter={StaticResource BooleanToVisibilityConverter}}"
                          X1="{Binding ConnectionStartPoint.X}"
                          Y1="{Binding ConnectionStartPoint.Y}"
                          X2="{Binding MousePosition.X, FallbackValue=0}"
                          Y2="{Binding MousePosition.Y, FallbackValue=0}"
                          IsHitTestVisible="False"/>
                    
                    <!-- ノード -->
                    <ItemsControl ItemsSource="{Binding Nodes}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                                <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Width="120" Height="40" 
                                        Background="LightBlue" 
                                        BorderBrush="DarkBlue" 
                                        BorderThickness="2"
                                        CornerRadius="5">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown">
                                            <i:InvokeCommandAction Command="{Binding DataContext.NodeMouseDownCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                   CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="MouseUp">
                                            <i:InvokeCommandAction Command="{Binding DataContext.NodeMouseUpCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                   CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter Property="Background" Value="LightYellow"/>
                                                    <Setter Property="BorderBrush" Value="Orange"/>
                                                    <Setter Property="BorderThickness" Value="3"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" 
                                                   Text="{Binding DisplayName}" 
                                                   HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center"
                                                   FontWeight="Bold"
                                                   FontSize="10"
                                                   TextTrimming="CharacterEllipsis"/>
                                        <TextBlock Grid.Row="1" 
                                                   Text="{Binding StartSensor}" 
                                                   HorizontalAlignment="Center"
                                                   FontSize="8"
                                                   Foreground="Gray"
                                                   TextTrimming="CharacterEllipsis"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Canvas>
            </Grid>
        </ScrollViewer>
        
        <!-- プロパティパネル -->
        <Border Grid.Row="2" BorderBrush="Gray" BorderThickness="0,1,0,0">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" 
                           Text="選択された工程のプロパティ" 
                           FontWeight="Bold" 
                           Margin="0,0,0,10"/>
                
                <TextBlock Grid.Row="1" Grid.Column="0" Text="工程名:" Margin="0,0,10,5"/>
                <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                         Text="{Binding SelectedNode.DisplayName, Mode=OneWay, FallbackValue=''}" 
                         IsReadOnly="True"
                         Background="LightGray"
                         Margin="0,0,0,5"/>
                
                <TextBlock Grid.Row="2" Grid.Column="0" Text="開始条件ID (;区切り):" Margin="0,0,10,5"/>
                <TextBox Grid.Row="2" Grid.Column="1" 
                         Text="{Binding SelectedNodeStartIds, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                         Margin="0,0,5,5"/>
                <Button Grid.Row="2" Grid.Column="2" 
                        Content="更新" 
                        Command="{Binding UpdateSelectedNodeStartIdsCommand}"
                        Padding="10,2"/>
                
                <TextBlock Grid.Row="3" Grid.Column="0" Text="開始センサー:" Margin="0,0,10,0"/>
                <TextBox Grid.Row="3" Grid.Column="1" 
                         Text="{Binding SelectedNodeStartSensor, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                         Margin="0,0,5,0"/>
                <Button Grid.Row="3" Grid.Column="2" 
                        Content="更新" 
                        Command="{Binding UpdateSelectedNodeStartSensorCommand}"
                        Padding="10,2"/>
            </Grid>
        </Border>
    </Grid>
</Window>